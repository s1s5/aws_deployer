#!/bin/bash
# -*- mode: shell-script -*-

usage_exit() {
        echo "Usage: $0 [-h] [-ftT] <service_name> commands" 1>&2
        exit 1
}

script_dir=$(cd $(dirname ${BASH_SOURCE:-$0}); pwd)

service_name=
if [[ ${1} = *":"* ]]; then
  IFS=: read -r service_name src_path <<< "${1}"
else
  src_path=${1}
fi

if [[ ${2} = *":"* ]]; then
  IFS=: read -r service_name dst_path <<< "${2}"
else
  dst_path=${2}
fi

if [ ${service_name}"" = "" ]; then
    echo "no service name found"
    exit 1
fi

exec_opts=""
service_number=1
while getopts tn: OPT
do
    case $OPT in
        n)  service_number=$OPTARG
            ;;
        h)  usage_exit
            ;;
        \?) usage_exit
            ;;
    esac
done
shift $((OPTIND - 1))

node_name=`docker service ps ${service_name} --filter "name=${service_name}.${service_number}" --filter desired-state=running --format "{{ .Node }}@{{ .CurrentState }}" | grep Running | head -n 1 | sed 's/\@.*//'`
if [ ""${node_name} = "" ]; then
   echo "could not find service : ${service_name}.${service_number}"
   exit 1
fi

docker_host=`${script_dir}/rdocker -H ${node_name}`
docker_container=`docker -H ${docker_host} ps -f name=${service_name}.[0-9]+.* -q`

if [[ ${1} = *":"* ]]; then
  src_prefix="${docker_container}:"
else
  src_prefix=
fi

if [[ ${2} = *":"* ]]; then
  dst_prefix="${docker_container}:"
else
  dst_prefix=
fi

shift

docker -H ${docker_host} cp ${src_prefix}${src_path} ${dst_prefix}${dst_path}
