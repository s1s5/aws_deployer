#!/bin/bash
# -*- mode: shell-script -*-

set -e

script_dir=/opt/aws_deployer/bin
pushd `pwd` > /dev/null
cd ${script_dir}/..

usage_exit() {
    echo "Usage: $0 [-s slack_url] <host names...>" 1>&2
    exit 0
}

while getopts s: opts
do
    case $opts in
        s)
            SLACK_URL=$OPTARG
            ;;
        \?)
            usage_exit
            ;;
    esac
done
shift $((OPTIND - 1))

declare -a args
for a in $@;do
    args=("${args[@]}" $a)
done


hosts=${args[0]}
for ((i = 1; i < ${#args[@]}; i++)) {
        hosts="${hosts},${args[i]}"
}

EXTRA_VARS="ansible_python_interpreter=/usr/bin/python2.7"
if [ ${SLACK_URL}"" != "" ]; then
    EXTRA_VARS="${EXTRA_VARS} SLACK_URL=${SLACK_URL}"
fi

fab -f fabfile.py -H ${hosts} install_default_packages create_swap

if [ $# == 1 ]; then
    hosts=${hosts},
fi
ansible-playbook -i ${hosts} ansible/site.yml --extra-vars "${EXTRA_VARS}" -K

echo "restarting all hosts ...."
for ((i = 0; i < ${#args[@]}; i++)) {
    ssh -t ${args[i]} sudo reboot
}

for ((i = 0; i < ${#args[@]}; i++)) {
    while :
    do
        sleep 1
        ssh ${args[i]} true &> /dev/null
        if [ $? == 0 ]; then
            break
        fi
    done
}
echo "finished!!"
popd > /dev/null
